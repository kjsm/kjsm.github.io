#/bin/sh

install()
{
  local readonly package="$1"
  local readonly options="$2"

  if [ -z "$package" ]; then
    error "Not given package name"
    exit 1
  fi

  if ! installed $package; then
    notice "Install: $package"

    if [ $USER = "root" ]; then
      yum install -q -y $options $package
    else
      sudo yum install -q -y $options $package
    fi

    success "Installed: $package"
  else
    skip "Already installed: $package"
  fi
}

uninstall()
{
  local readonly package="$1"

  if [ -z "$package" ]; then
    error "Not given package name"
    exit 1
  fi

  if installed $package; then
    notice "Uninstall: $package"

    if [ $USER = "root" ]; then
      yum remove $package
    else
      sudo yum remove $package
    fi

    success "Uninstalled: $package"
  else
    skip "Not installed: $package"
  fi
}

installed()
{
  local readonly package="$1"

  if [ -z "$package" ]; then
    error "Not given package name"
    exit 1
  fi

  if rpm -q $package > /dev/null; then
    return 0
  else
    return 1
  fi
}

brew_install()
{
  local readonly package="$1"
  local readonly options="$2"

  if [ -z "$package" ]; then
    error "Not given package name"
    exit 1
  fi

  brew install $package $options

  success "install $package (by brew)"
}

brew_installed()
{
  local package="$1"

  if [ -z "$package" ]; then
    error "Not given package name"
    exit 1
  fi

  if brew list | grep $package > /dev/null; then
    return 0
  else
    return 1
  fi
}

match()
{
  local readonly pattern="$1"
  local readonly path="$2"

  if [ -z "$pattern" ]; then
    error "Not given pattern"
    exit 1
  fi

  if [ -z "$path" ]; then
    error "Not given path"
    exit 1
  fi

  if grep "$pattern" $path > /dev/null; then
    return 0
  else
    return 1
  fi
}

current_dir()
{
  echo $(cd $(dirname $0); pwd)
}

ask()
{
  local _input

  echo -n -e "\033[1;33m[ask] $1 (y/n)>\033[0m "
  read _input

  if [ "$_input" = "y" ]; then
    return 0
  else
    return 1
  fi
}

enter()
{
  local _input

  echo -n -e "\033[1;33m(Press enter to continue)\033[0m"
  read _input
}

input()
{
  echo -e "\033[1;33m[input] $1:\033[0m"
}

notice()
{
  echo -e "\033[1;35m==>\033[0m $1"
}

success()
{
  echo -e "\033[1;32m==>\033[0m $1"
}

skip()
{
  echo -e "\033[1;33m==> (skip) $1\033[0m"
}

error()
{
  echo -e "\033[1;31m==> (error) $1\033[0m"
}

# vim: filetype=sh
