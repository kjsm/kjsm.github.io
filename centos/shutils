#/bin/sh

install()
{
  local readonly package="$1"
  local readonly options="$2"

  if [ -z "$package" ]; then
    error "Not given package name"
    exit 1
  fi

  if ! installed $package; then
    notice "Install: $package"

    if [ $USER = "root" ]; then
      yum install -q -y $options $package
    else
      sudo yum install -q -y $options $package
    fi

    success "Installed: $package"
  else
    skip "Already installed: $package"
  fi
}

uninstall()
{
  local readonly package="$1"

  if [ -z "$package" ]; then
    error "Not given package name"
    exit 1
  fi

  if installed $package; then
    notice "Uninstall: $package"

    if [ $USER = "root" ]; then
      yum remove $package
    else
      sudo yum remove $package
    fi

    success "Uninstalled: $package"
  else
    skip "Not installed: $package"
  fi
}

installed()
{
  local readonly package="$1"

  if [ -z "$package" ]; then
    error "Not given package name"
    exit 1
  fi

  if rpm -q $package > /dev/null; then
    return 0
  else
    return 1
  fi
}

install_repository()
{
  local readonly name="$1"
  local readonly url="$2"
  local readonly local_path="$3"

  if [ -z "$name" ]; then
    error "Not given repository name"
    exit 1
  fi

  if [ -z "$url" ]; then
    error "Not given url"
    exit 1
  fi

  if [ -z "$local_path" ]; then
    error "Not given url"
    exit 1
  fi

  if [ ! -f $local_path ]; then
    notice "Install repository: $name"
    sudo yum install -q -y $url
    success "Installed repository: $name"
  else
    skip "Already installed: $name"
  fi
}

start_service()
{
  local readonly service="$1"

  if [ -z "$service" ]; then
    error "Not given service name"
    exit 1
  fi

  if sudo service $service status > /dev/null; then
    skip "Already started: $service"
  else
    notice "Start service: $service"
    sudo service $service start > /dev/null 2>&1
    success "Started service: $service"
  fi
}

enable_service()
{
  local readonly service="$1"

  if [ -z "$service" ]; then
    error "Not given service name"
    exit 1
  fi

  if sudo chkconfig --list $service | grep ":on" > /dev/null; then
    skip "Already enabled: $service"
  else
    notice "Enable service: $service"
    sudo chkconfig $service on
    success "Enabled service: $service"
  fi
}

brew_install()
{
  local readonly package="$1"
  local readonly options="$2"

  if [ -z "$package" ]; then
    error "Not given package name"
    exit 1
  fi

  brew install $package $options

  success "install $package (by brew)"
}

brew_installed()
{
  local package="$1"

  if [ -z "$package" ]; then
    error "Not given package name"
    exit 1
  fi

  if brew list | grep $package > /dev/null; then
    return 0
  else
    return 1
  fi
}

match()
{
  local readonly pattern="$1"
  local readonly path="$2"

  if [ -z "$pattern" ]; then
    error "Not given pattern"
    exit 1
  fi

  if [ -z "$path" ]; then
    error "Not given path"
    exit 1
  fi

  if grep "$pattern" $path > /dev/null; then
    return 0
  else
    return 1
  fi
}

current_dir()
{
  echo $(cd $(dirname $0); pwd)
}

ask()
{
  local _input

  echo -n -e "\033[1;33m[ask] $1 (y/n)>\033[0m "
  read _input

  if [ "$_input" = "y" ]; then
    return 0
  else
    return 1
  fi
}

enter()
{
  local _input

  echo -n -e "(Press enter to continue)"
  read _input
}

input()
{
  echo -e "\033[1;35m(input) $1:\033[0m"
}

notice()
{
  echo -e "\033[1;35m==>\033[0m $1"
}

success()
{
  if [ -n "$1" ]; then
    echo -e "\033[1;32m==>\033[0m $1"
  else
    echo -e "\033[1;32m==> Success\033[0m"
  fi
}

skip()
{
  echo -e "\033[1;33m==> (skip) $1\033[0m"
}

error()
{
  echo -e "\033[1;31m==> (error) $1\033[0m"
}

# vim: filetype=sh
